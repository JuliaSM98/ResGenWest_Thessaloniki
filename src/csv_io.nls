;; CSV loading and preview helpers

to load-options-csv [path]
  set options-header []
  set options-rows   []
  file-close-all
  if not file-exists? path [ print (word "WARNING: file not found: " path) stop ]
  file-open path
  if file-at-end? [ print (word "WARNING: file is empty: " path) file-close stop ]

  set options-header csv:from-row file-read-line
  set options-header map [ h -> clean-token (word h) ] options-header

  while [ not file-at-end? ] [
    let line file-read-line
    if length line > 0 [
      set options-rows lput (csv:from-row line) options-rows
    ]
  ]
  file-close
end

to-report clean-token [s]
  if (length s > 0) and (substring s 0 1 = "﻿") [
    set s substring s 1 length s
  ]
  while [length s > 0 and member? (substring s 0 1) [" " "\t" "\r" "\n"]] [
    set s substring s 1 length s
  ]
  while [length s > 0 and member? (substring s (length s - 1) length s) [" " "\t" "\r" "\n"]] [
    set s substring s 0 (length s - 1)
  ]
  report s
end

to preview-csvs
  print "=== options.csv ==="
  print (word "Header: " options-header)
  print (word " rows: " options-rows)

  print "=== intensities (from sliders) ==="
  print (word "RES: cost_€/m2=" cost_RES ", CO2_kg/m2=" co2_reduction_RES)
  print (word "NBS: cost_€/tree=" cost_NBS ", CO2_kg/tree·year=" co2_reduction_NBS )
end
